<?xml version="1.0" encoding="utf-8" ?>
<base:BasePage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
               xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
               xmlns:base="clr-namespace:Reminder.Pages"
               x:Class="Reminder.Pages.SettingsPage"
               xmlns:properties="clr-namespace:SDK.Base.Properties;assembly=SDK.Base"
               xmlns:controls="clr-namespace:Reminder.Controls"
               xmlns:dxs="http://schemas.devexpress.com/maui"
               xmlns:dx="clr-namespace:DevExpress.Maui.Core;assembly=DevExpress.Maui.Core"
               xmlns:mct="clr-namespace:CommunityToolkit.Maui.Behaviors;assembly=CommunityToolkit.Maui"
               BindingContext="{Binding Source={StaticResource Locator}, Path=SettingsPageViewModel}">

    <Shell.TitleView>
        <StackLayout Orientation="Horizontal">
            <Label Text="{x:Static properties:Resource.Settings}"
                   VerticalOptions="CenterAndExpand"
                   FontFamily="OpenSansRegular"
                   FontSize="22"
                   FontAttributes="Bold"/>
            <ImageButton Source="contrast"
                         WidthRequest="30"
                         HeightRequest="30"
                         HorizontalOptions="EndAndExpand"
                         Margin="0,0,20,0"
                         Command="{Binding OpenPopupCommand}"/>
        </StackLayout>
    </Shell.TitleView>

    <Grid>
        <controls:DialogPopup IsOpen="{Binding IsOpenPopup}"
                          Title="{x:Static properties:Resource.SettingTheme}">
            <controls:DialogPopup.CustomContent>
                <dxs:DXStackLayout Orientation="Vertical">
                    <dxs:DXButton Style="{StaticResource ButtonStyle}"
                              Content="{x:Static properties:Resource.DarkTheme}"
                              Icon="dark_mode"
                              IconColor="Black"
                              DisabledIconColor="Black"
                              Command="{Binding SetThemeCommand}"
                              CommandParameter="{Binding ThemesManager.Themes[0]}">
                        <dxs:DXButton.Triggers>
                            <DataTrigger Binding="{Binding SelectedTheme}"
                                     TargetType="dxs:DXButton"
                                     Value="Dark">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </dxs:DXButton.Triggers>
                    </dxs:DXButton>
                    <dxs:DXButton Style="{StaticResource ButtonStyle}"
                              Content="{x:Static properties:Resource.LightTheme}"
                              Icon="light_mode"
                              IconColor="#f7fc5f"
                              DisabledIconColor="#f7fc5f"
                              Command="{Binding SetThemeCommand}"
                              CommandParameter="{Binding ThemesManager.Themes[1]}">
                        <dxs:DXButton.Triggers>
                            <DataTrigger Binding="{Binding SelectedTheme}"
                                     TargetType="dxs:DXButton"
                                     Value="Light">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </dxs:DXButton.Triggers>
                    </dxs:DXButton>
                    <dxs:DXButton Style="{StaticResource ButtonStyle}"
                              Content="{x:Static properties:Resource.SystemTheme}"
                              Icon="settings"
                              IconColor="#0b920d"
                              DisabledIconColor="#0b920d"
                              Command="{Binding SetThemeCommand}"
                              CommandParameter="{Binding ThemesManager.Themes[2]}">
                        <dxs:DXButton.Triggers>
                            <DataTrigger Binding="{Binding SelectedTheme}"
                                     TargetType="dxs:DXButton"
                                     Value="Unspecified">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </dxs:DXButton.Triggers>
                    </dxs:DXButton>
                </dxs:DXStackLayout>
            </controls:DialogPopup.CustomContent>
        </controls:DialogPopup>
        <Grid ColumnDefinitions="*,Auto" 
              HeightRequest="60"
              VerticalOptions="Start"
              Margin="5">
            <dxs:TimeEdit Grid.Column="0"
                          Time="{Binding Time}"
                          LabelText="{x:Static properties:Resource.AlertTime}"
                          IsEnabled="{Binding Source={x:Reference check}, Path=IsChecked}"
                          StartIcon="alarm"
                          TimeIcon="edit"
                          StartIconColor="#d8d842"
                          TimeIconColor="#d8d842"
                          TimeChangedCommand="{Binding SetTimeCommand}"/>
            <dxs:CheckEdit Grid.Column="1"
                           x:Name="check"
                           Padding="10"
                           IsChecked="{Binding IsChecked}"
                           VerticalOptions="CenterAndExpand"
                           HorizontalOptions="CenterAndExpand">
                <dxs:CheckEdit.Behaviors>
                    <mct:EventToCommandBehavior EventName="CheckedChanged"
                                                Command="{Binding CheckedCommand}"/>
                </dxs:CheckEdit.Behaviors>
            </dxs:CheckEdit>
        </Grid>
    </Grid>
</base:BasePage>