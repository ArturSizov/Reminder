<base:BasePage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
               xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
               xmlns:base="clr-namespace:Reminder.Pages"
               xmlns:dxg="clr-namespace:DevExpress.Maui.DataGrid;assembly=DevExpress.Maui.DataGrid"
               xmlns:dx="clr-namespace:DevExpress.Maui.Core;assembly=DevExpress.Maui.Core"
               xmlns:dxe="clr-namespace:DevExpress.Maui.Editors;assembly=DevExpress.Maui.Editors"
               xmlns:ffimage="clr-namespace:FFImageLoading.Maui;assembly=FFImageLoading.Maui"
               xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
               xmlns:vm="clr-namespace:Reminder.ViewModels"
               xmlns:converters="clr-namespace:Reminder.Converters"
               xmlns:avatar="clr-namespace:Reminder.Controls"        
               xmlns:properties="clr-namespace:SDK.Base.Properties;assembly=SDK.Base"
               x:Class="Reminder.Pages.MainPage"
               Shell.NavBarIsVisible="True">


    <Shell.TitleView>
        <Border StrokeThickness="0" 
                Stroke="Transparent"
                Padding="0,0,10,0">
            <Border.Triggers>
                <DataTrigger TargetType="Border"
                             Binding="{Binding DataManager.Items.Count}"
                             Value="0">
                    <Setter Property="IsVisible"
                            Value="False"/>
                </DataTrigger>
            </Border.Triggers>

            <dxe:TextEdit x:Name="search"
                  EndIcon="search" 
                  PlaceholderText="{x:Static properties:Resource.Search}" 
                  BorderThickness="1" 
                  BoxPadding="20,6,10,6"
                  FocusedBorderColor="{dx:ThemeNeutralColor Light=0, Dark=30}" 
                  CornerRadius="16" 
                  HeightRequest="35" 
                  Margin="5,0,5,0"
                  TextChangedCommand="{Binding SearchCommand}"
                  TextChangedCommandParameter="{Binding Source={x:Reference search}, Path=Text}"/>
        </Border>
    </Shell.TitleView>

    <Grid>
        <dx:DXStackLayout Grid.Row="1" 
                          ZIndex="1"
                          Orientation="Vertical"
                          VerticalOptions="Center"
                          HorizontalOptions="Center"
                          IsVisible="{Binding IsVisebleErrorMessage}">
            <dx:DXStackLayout.Triggers>
                <DataTrigger TargetType="dx:DXStackLayout"
                             Binding="{Binding DataManager.Items.Count}"
                             Value="0">
                    <Setter Property="IsVisible"
                            Value="True"/>
                </DataTrigger>
            </dx:DXStackLayout.Triggers>
            <Image Source="search"
                   WidthRequest="50"
                   HeightRequest="50"
                   VerticalOptions="Center"
                   HorizontalOptions="Center">
                <Image.Behaviors>
                    <toolkit:IconTintColorBehavior TintColor="{StaticResource Gray400}"/>
                </Image.Behaviors>
            </Image>
            <Label Text="{x:Static properties:Resource.ListEmpty}"
                   VerticalOptions="Center"
                   HorizontalOptions="Center"/>
        </dx:DXStackLayout>
        <dxg:DataGridView Grid.Row="0"
                          IsColumnHeaderVisible="False"
                          ItemsSource="{Binding DataManager.Items}"
                          SelectionMode="None"  
                          AllowDragDropRows="True" 
                          AllowDragDropSortedRows="True" 
                          AllowGroupCollapse="False"
                          FilterString="{Binding SearchText}"
                          Scrolled="DataGridView_Scrolled">
            <dxg:DataGridView.Triggers>
                <Trigger TargetType="dxg:DataGridView"
                         Property="ItemsSource"
                         Value="0">
                    <Setter Property="IsVisible"
                            Value="False"/>
                </Trigger>
            </dxg:DataGridView.Triggers>
            <dxg:DataGridView.EndSwipeItems>
                <dxg:GridSwipeItem Caption="{x:Static properties:Resource.Delete}" 
                                   BackgroundColor="#ff3b30" 
                                   Image="delete.svg"
                                   Command="{Binding DeleteUserCommand}"/>
            </dxg:DataGridView.EndSwipeItems>

            <dxg:DataGridView.CellAppearance>
                <dxg:CellAppearance HorizontalLineThickness="0"/>
            </dxg:DataGridView.CellAppearance>
            <dxg:DataGridView.Columns>
                <dxg:TemplateColumn SortOrder="Ascending" 
                                    IsGrouped="True" 
                                    GroupInterval="Alphabetical" 
                                    LineBreakMode="TailTruncation">
                    <dxg:TemplateColumn.DisplayTemplate>
                        <DataTemplate>
                            <Grid ColumnDefinitions="80, *"
                                  Padding="5">
                                <avatar:UserAvatar Grid.Row="0"
                                                   ImageSource="{Binding Item.Avatar}"
                                                   WidthRequest="80"
                                                   HeightRequest="80"/>
                                
                                <StackLayout Grid.Column="1"
                                             Orientation="Vertical"
                                             HorizontalOptions="Start"
                                             VerticalOptions="CenterAndExpand"
                                             Padding="5">
                                    <StackLayout Orientation="Horizontal"  
                                                 VerticalOptions="End">
                                        <Label Text="{Binding Item.LastName}"
                                               FontAttributes="Bold"
                                               TextColor="{DynamicResource TextColor}"
                                               Margin="5,0,0,0"
                                               IsVisible="{Binding Item.LastName, Converter={StaticResource IsVisibleConverter}}"/>
                                        <Label Text="{Binding Item.Name}"
                                               FontAttributes="Bold"
                                               TextColor="{DynamicResource TextColor}"
                                               Margin="5,0,0,0"
                                               IsVisible="{Binding Item.Name, Converter={StaticResource IsVisibleConverter}}"/>
                                        <Label Text="{Binding Item.MiddleName}" 
                                               FontAttributes="Bold"
                                               TextColor="{DynamicResource TextColor}"
                                               Margin="5,0,0,0"
                                               IsVisible="{Binding Item.MiddleName, Converter={StaticResource IsVisibleConverter}}"/>
                                    </StackLayout>
                                    <Label Text="{Binding Item.Note}" 
                                           Margin="5,0,0,0"
                                           TextColor="{DynamicResource PositionColor}" 
                                           LineBreakMode="TailTruncation" 
                                           VerticalOptions="Start"
                                           IsVisible="{Binding Item.Note, Converter={StaticResource IsVisibleConverter}}"/>

                                    <Label Text="{x:Static properties:Resource.Congratulate}" 
                                           Margin="5,0,0,0"
                                           FontFamily="Inkfree"
                                           FontAttributes="Bold"
                                           FontSize="18"
                                           TextColor="Red" 
                                           LineBreakMode="TailTruncation" 
                                           VerticalOptions="Start"
                                           IsVisible="False">
                                        <Label.Triggers>
                                            <DataTrigger TargetType="Label"
                                                         Binding="{Binding Item.Birthday, Converter={StaticResource DaysBeforeTheEventConverter}}"
                                                         Value="0">
                                                <Setter Property="IsVisible"
                                                        Value="True"/>
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                </StackLayout>
                                <Grid.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModel}}, Path=OpenUserProfileCommand}"
                                                          CommandParameter="{Binding Item}"/>
                                </Grid.GestureRecognizers>
                            </Grid>
                        </DataTemplate>
                    </dxg:TemplateColumn.DisplayTemplate>
                </dxg:TemplateColumn>
            </dxg:DataGridView.Columns>
        </dxg:DataGridView>
        <dx:DXButton x:Name="buttonAdd"
                     Icon="person_add"
                     WidthRequest="50"
                     HeightRequest="50"
                     VerticalOptions="End"
                     HorizontalOptions="End"
                     IconWidth="35"
                     IconHeight="35"
                     Margin="10"
                     Command="{Binding AddUserCommand}"
                     IsEnabled="{Binding AddUserIsEnabled}"/>
    </Grid>
</base:BasePage>